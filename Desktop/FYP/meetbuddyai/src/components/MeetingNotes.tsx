import React, { useState } from 'react';
import { FileText, Edit, Save, X, Download } from 'lucide-react';
import { Meeting } from '../contexts/MeetingContext';
import { useMeeting } from '../contexts/MeetingContext';

interface MeetingNotesProps {
  meeting: Meeting;
}

export default function MeetingNotes({ meeting }: MeetingNotesProps) {
  const [isEditing, setIsEditing] = useState(false);
  const [notes, setNotes] = useState(meeting.notes || '');
  const { updateMeetingNotes } = useMeeting();

  const handleSave = () => {
    updateMeetingNotes(meeting.id, notes);
    setIsEditing(false);
  };

  const handleCancel = () => {
    setNotes(meeting.notes || '');
    setIsEditing(false);
  };

  const exportNotes = () => {
    const content = `Meeting Notes: ${meeting.title}
Date: ${meeting.scheduledTime.toLocaleDateString()}
Platform: ${meeting.platform}

${notes}

---
Generated by MeetBuddyAI`;
    
    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `${meeting.title.replace(/[^a-z0-9]/gi, '_').toLowerCase()}_notes.txt`;
    a.click();
    URL.revokeObjectURL(url);
  };

  return (
    <div className="bg-white rounded-xl border border-gray-200 p-6">
      <div className="flex items-center justify-between mb-4">
        <div className="flex items-center space-x-2">
          <FileText className="w-5 h-5 text-indigo-600" />
          <h3 className="font-semibold text-gray-900">Meeting Notes</h3>
        </div>
        
        <div className="flex space-x-2">
          {meeting.notes && (
            <button
              onClick={exportNotes}
              className="text-gray-400 hover:text-gray-600 transition-colors"
              title="Export notes"
            >
              <Download className="w-4 h-4" />
            </button>
          )}
          
          {!isEditing ? (
            <button
              onClick={() => setIsEditing(true)}
              className="text-gray-400 hover:text-indigo-600 transition-colors"
              title="Edit notes"
            >
              <Edit className="w-4 h-4" />
            </button>
          ) : (
            <div className="flex space-x-1">
              <button
                onClick={handleSave}
                className="text-green-600 hover:text-green-700 transition-colors"
                title="Save notes"
              >
                <Save className="w-4 h-4" />
              </button>
              <button
                onClick={handleCancel}
                className="text-gray-400 hover:text-red-600 transition-colors"
                title="Cancel editing"
              >
                <X className="w-4 h-4" />
              </button>
            </div>
          )}
        </div>
      </div>

      {isEditing ? (
        <div className="space-y-3">
          <textarea
            value={notes}
            onChange={(e) => setNotes(e.target.value)}
            rows={12}
            className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent resize-none"
            placeholder="Add your meeting notes here...

Key points discussed:
- 
- 
- 

Action items:
- 
- 
- 

Follow-up tasks:
- 
- 
- "
          />
          <div className="flex justify-end space-x-2">
            <button
              onClick={handleCancel}
              className="px-3 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors text-sm"
            >
              Cancel
            </button>
            <button
              onClick={handleSave}
              className="px-3 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors text-sm"
            >
              Save Notes
            </button>
          </div>
        </div>
      ) : (
        <div className="min-h-[200px]">
          {meeting.notes ? (
            <div className="prose prose-sm max-w-none">
              <pre className="whitespace-pre-wrap text-gray-700 text-sm leading-relaxed font-sans">
                {meeting.notes}
              </pre>
            </div>
          ) : (
            <div className="h-full flex items-center justify-center text-center">
              <div>
                <FileText className="w-12 h-12 text-gray-300 mx-auto mb-3" />
                <p className="text-gray-500 mb-2">No notes added yet</p>
                <button
                  onClick={() => setIsEditing(true)}
                  className="text-indigo-600 hover:text-indigo-700 text-sm font-medium"
                >
                  Add meeting notes
                </button>
              </div>
            </div>
          )}
        </div>
      )}
    </div>
  );
}
